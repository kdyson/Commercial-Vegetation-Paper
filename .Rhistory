" ",
"NA",
"NA",
"NA",
" ",
"NA",
"NA",
"NA",
"NA"
),
`Sample` = c(
" ",
paste0("Range: ", paste0(range(sample.covariates$acres)%>%round(2), collapse = "-"),
"; Mean(SD): ", mean(sample.covariates$acres)%>%round(2), "(",
sd(sample.covariates$acres)%>%round(2), ")"),
paste("Bellevue:", sum(sample.covariates$DistrictName=="BELLEVUE", na.rm = T),
"Redmond:", sum(sample.covariates$DistrictName=="REDMOND", na.rm=T)),
paste0("Range: ", paste0(range(sample.covariates$age.2017), collapse = "-"),
"; Mean(SD): ", mean(sample.covariates$age.2017)%>%round(1), "(",
sd(sample.covariates$age.2017)%>%round(1), ")"),
paste("Below Average:", sum(sample.covariates$BldgQuality_lookup %in%
c("LOW COST", "LOW/AVERAGE"), na.rm=T),
"Average:", sum(sample.covariates$BldgQuality_lookup=="AVERAGE", na.rm = T),
"Average/Good:", sum(sample.covariates$BldgQuality_lookup=="AVERAGE/GOOD", na.rm=T),
"Good:", sum(sample.covariates$BldgQuality_lookup=="GOOD", na.rm=T),
"Good/Excellent:", sum(sample.covariates$BldgQuality_lookup=="GOOD/EXCELLENT", na.rm=T)
),
paste0("Range: ", paste0(range(sample.covariates$landrentperacre)%>%round(0), collapse = "-"),
"; Mean(SD): ", mean(sample.covariates$landrentperacre)%>%round(0), "(",
sd(sample.covariates$landrentperacre)%>%round(0), ")"),
paste0("Range: ", paste0(range(sample.covariates$dissolved_parcel_500m_buffer_impervious_500m_mean)%>%round(1), collapse = "-"),
"; Mean(SD): ", mean(sample.covariates$dissolved_parcel_500m_buffer_impervious_500m_mean)%>%round(1), "(",
sd(sample.covariates$dissolved_parcel_500m_buffer_impervious_500m_mean)%>%round(1), ")"),
paste0("Range: ", paste0(range(sample.covariates$MedianHouseholdIncome_B19013e1)%>%round(0), collapse = "-"),
"; Mean(SD): ", mean(sample.covariates$MedianHouseholdIncome_B19013e1)%>%round(0), "(",
sd(sample.covariates$MedianHouseholdIncome_B19013e1)%>%round(0), ")"),
paste0("Range: ", paste0(range(sample.covariates$Proportion_ForeignBorn_B99051e5*100)%>%round(1), collapse = "-"),
"; Mean(SD): ", mean(sample.covariates$Proportion_ForeignBorn_B99051e5*100)%>%round(1), "(",
sd(sample.covariates$Proportion_ForeignBorn_B99051e5*100)%>%round(1), ")"),
" s",
paste("Yes:", sum(management.landscaping$stand.predate.development=="yes", na.rm = T),
"No:", sum(management.landscaping$stand.predate.development=="no", na.rm=T)),
paste0("Range: ", paste0(range(management.landscaping$height.m.median)%>%round(1), collapse = "-"),
"; Mean(SD): ", mean(management.landscaping$height.m.median)%>%round(1), "(",
sd(management.landscaping$height.m.median)%>%round(1), ")"),
paste0("Range: ", paste0(range(management.landscaping$tree.conifer.nat.dens)%>%round(1), collapse = "-"),
"; Mean(SD): ", mean(management.landscaping$tree.conifer.nat.dens)%>%round(1), "(",
sd(management.landscaping$tree.conifer.nat.dens)%>%round(1), ")"),
" s",
paste("Mean (SD) Grass:", mean(dens.matrify.gc$grass*100)%>%round(1),
"(",
sd(dens.matrify.gc$grass*100)%>%round(1), ");",
"Impervious:", mean(dens.matrify.gc$impervious.sqft*100)%>%round(1),
"(",
sd(dens.matrify.gc$impervious.sqft*100)%>%round(1), ");",
"Dirt/Litter:", mean(dens.matrify.gc$dirt.litter*100)%>%round(1),
"(",
sd(dens.matrify.gc$dirt.litter*100)%>%round(1), ")"),
paste0("Range: ", paste0(range(management.landscaping$height.m.median)%>%round(1), collapse = "-"),
"; Mean(SD): ", mean(management.landscaping$height.m.median)%>%round(1), "(",
sd(management.landscaping$height.m.median)%>%round(1), ")"),
paste("Yes:", sum(management.landscaping$Irrigation=="yes", na.rm = T),
"No:", sum(management.landscaping$Irrigation=="no", na.rm=T)),
paste("Mulch Y/N:", paste(sum(management.landscaping$Mulch=="yes", na.rm = T),
sum(management.landscaping$Mulch=="no", na.rm=T),
sep = "/"),
"Herbicide:", paste(sum(management.landscaping$Herbicide=="yes", na.rm = T),
sum(management.landscaping$Herbicide=="no", na.rm=T),
sep = "/"),
"Fertilizer:", paste(sum(management.landscaping$Fertilizer=="yes", na.rm = T),
sum(management.landscaping$Fertilizer=="no", na.rm=T), sep = "/")
)
)
)
knitr::kable(covariate.definitions,
caption = '(ref:definition)',
format = "pandoc", escape = TRUE, format.args = list(decimal.mark = '.', big.mark = ","))
# Chunk 7: beta-calc
tree.sorensen <- vegdist(matrify.tree.sp.only, binary = TRUE)%>%round(3) # take mean for sorensen index
shrub.sorensen <- vegdist(matrify.shrub.site, binary = TRUE)%>%round(3) #ditto
tree.z.beta <- betadiver(matrify.tree.sp.only, "z")%>%round(3)
shrub.z.beta <- betadiver(matrify.shrub.site, "z")%>%round(3)
beta.tibble <- tibble(Metric = c("Tree Sorensen", "Tree Arrhenius Model z", "Shrub Sorensen", "Shrub Arrhenius Model z"),
Minimum = c(min(tree.sorensen), min(tree.z.beta), min(shrub.sorensen), min(shrub.z.beta)),
Maximum = c(max(tree.sorensen), max(tree.z.beta), max(shrub.sorensen), max(shrub.z.beta)),
Mean = c(mean(tree.sorensen), mean(tree.z.beta), mean(shrub.sorensen), mean(shrub.z.beta)),
`S.D.` = c(sd(tree.sorensen), sd(tree.z.beta), sd(shrub.sorensen), sd(shrub.z.beta)),
Median = c(median(tree.sorensen), median(tree.z.beta), median(shrub.sorensen), median(shrub.z.beta)))
diver.metrics <- data.frame(matrix(unlist(pretty.descriptive.stats.site),
nrow = nrow(pretty.descriptive.stats.site),
byrow = FALSE),
stringsAsFactors = FALSE)
colnames(diver.metrics) <- colnames(pretty.descriptive.stats.site)
diver.metrics <- rbind(diver.metrics,beta.tibble)
diver.metrics.display <- c("Tree Abundance",
"Tree Density",
"Tree Species Richness",
"Tree Shannon Diversity",
"Tree Effective Species Richness",
"Tree Sorensen",
"Tree Arrhenius Model z",
"Native Tree Abundance",
"Native Tree Density",
"Native Tree Species Richness",
"Native Tree Shannon Diversity",
"Native Tree Effective Species Richness",
"Native Conifer Abundance",
"Native Conifer Density",
"Shrub Abundance",
"Shrub Density",
"Shrub Species Richness",
"Shrub Shannon Diversity",
"Shrub Effective Species Richness",
"Shrub Sorensen",
"Shrub Arrhenius Model z",
"Native Shrub Abundance",
"Native Shrub Desnity",
"Native Shrub Species Richness",
"Native Shrub Shannon Diversity",
"Native Shrub Effective Species Richness")
knitr::kable(diver.metrics[ diver.metrics$Metric %in% diver.metrics.display , c(1,2,5,3,4)],
row.names = FALSE,
caption = "Metrics for tree and shrub communities on sampled office developments. H' is Shannon's diversity index [@shannon1949], effective species richness = exp(H') [@jost2006], density = individuals per acre.",
format = "pandoc", escape = TRUE,
format.args = list(decimal.mark = '.', big.mark = ","))
diver.metrics
vegdist(matrify.tree.sp.only, binary = TRUE)%>%round(3)
# Chunk 1: VEG-SETUP
knitr::opts_chunk$set(
echo = FALSE,
warning = FALSE,
message = FALSE
)
#Woody vegetation communities on office developments are heterogenous and meaningfully influenced by development and landscaping choices
#Development and landscaping choices differentiate heterogenous tree and shrub communities on office developments
# This chapter .Rmd code relies on two sourced R codes:
# 'vegetation_data_processing.R' and 'vegetation_data_analysis.R.' These do the
# heavy lifting before importing results here for ggplot-ifying and presenting
# in Results and Discussion.
## Data manipulation --> analysis --> Rmarkdown (this doc)
## Load sourced R codes
##
all.current <- TRUE
if (all.current == TRUE) {
load(file = "vegetation_data_analysis_combined_04152019.RData")
}
if (all.current == FALSE) {
source("vegetation_data_analysis_Combine.R")
}
## Load required libraries
library(ggplot2)
library(rgl)
library(png)
library(grid)
library(gridExtra)
library(ggrepel)
library(tibble)
library(pander)
library(vegan)
library(dplyr)
options(digits = 3)
levels(vegetation.clusters$tree.cluster.name) <- c("Native", "Ornamental")
levels(vegetation.clusters$shrub.cluster.name) <- c("Ornamental", "Native")
population.covariates.subset <-
population.covariates[population.covariates$vegetation_class %in%
c("HH", "MC", "MD", "MM", "LL"),]
PA.tree.sp.only <- matrify.tree.sp.only
PA.tree.sp.only[PA.tree.sp.only > 0] <- 1
PA.shrub.site <- matrify.shrub.site
PA.shrub.site[PA.shrub.site > 0] <- 1
# Chunk 2: FIG-development-pic
knitr::include_graphics("Figure1_DPI_300.tif")
# Chunk 3: FIG-study-area-map
knitr::include_graphics("Figure2_DPI_300.tif")
# Chunk 4: FIG-vegetation-types
knitr::include_graphics("Figure3_DPI_300.tif")
# Chunk 5: TAB-vegclass
vegclasssum <- tibble(
`Vegetation Type` = c(
"High",
"Medium Canopy",
"Medium Diverse",
"Medium",
"Low",
"No Vegetation",
"Wetlands",
"Under Construction"
),
`Tree Cover` = c(
"30% native tree cover",
"30% native tree cover",
"15% tree cover",
"15% tree cover",
"< 10% tree cover",
"No trees",
"No requirement",
""
),
`Shrub Richness` = c(
"> 5 native shrub genera",
"No requirement",
"> 5 native shrub genera",
"> 5 shrub genera",
"< 5 shrub genera",
"No shrubs",
"No requirement",
""
),
`Strata Size` = c(
sum(population.covariates$vegetation_class == "HH"),
sum(population.covariates$vegetation_class == "MC"),
sum(population.covariates$vegetation_class == "MD"),
sum(population.covariates$vegetation_class == "MM"),
sum(population.covariates$vegetation_class == "LL"),
sum(population.covariates$vegetation_class == "LP"),
sum(population.covariates$vegetation_class == "WW"),
sum(population.covariates$vegetation_class == "XX")
),
`Sampled (n)` = c(5, 3, 4, 3, 5, 0, 0, 0),
Notes = c(
" ",
" ",
" ",
" ",
" ",
"Excluded from further analysis",
"Wetland present, excluded from further analysis",
"Excluded from further analysis"
)
)
knitr::kable(vegclasssum, caption = "**Vegetation type assignment criteria and strata size.**",
format = "pandoc", escape = TRUE)
# Chunk 6: TAB-covariate-definitions
covariate.definitions <- tibble(
`Variable Name` = c(
"1. AGGREGATED AND PARCEL LEVEL SOCIO-ECONOMIC VARIABLES",
"Area (acre)",
"Town",
"Building Age (in 2017)",
"Building Quality",
"Appraised Land Value per Acre",
"Impervious w/in 500 m (%)",
"Median Income",
"Percent Foreign-Born",
"2. DEVELOPMENT AND LANDSCAPING OUTCOME VARIABLES",
"Stands Predate Development",
"Median Height of Dominant Conifer",
"Density of Native Conifers",
"3. GROUND COVER MATERIAL AND MAINTENANCE REGIME",
"Ground Cover Types (%)",
"Dead Wood (count)",
"Irrigation",
"Mulch, Herbicide, and/or Fertilizer Application"
),
Definition = c(
" ",
"Site area, in acres.",
"Location, Bellevue or Redmond.",
"Age of building on site (or mean age for multiple buildings) in 2017.",
"Categorical 'quality class' assigned to buildings on the site",
"Appraised land value divided by site area. One missing assessed land values were replaced with population median land value.",
"Percent impervious surface within 500 m of the site's perimeter.",
"The median income of residents for the site's block group",
"The percent of residents born outside of the United States for the site's block group.",
" ",
"Binary variable indicating presence of a cluster of three+ trees that predate development. (Development)",
"Median height (m) of five dominant native conifer trees; age proxy. (Development)",
"Total density of Douglas-fir, western redcedar, and western hemlock (Development/Landscaping).",
" ",
"Ground cover types on site including lawn, mulch, and impervious surface.",
"Total abundance of stumps, logs, and snags on site.",
"Binary variable indicating whether irrigation is used during the summer months.",
"Binary variables (3) indicating whether landscaping crew applies mulch, herbicides, or fertilizers to a site."
),
`Data Source` = c(
" ",
"King County Assessor",
"King County Assessor",
"King County Assessor",
"King County Assessor",
"King County Assessor",
"National Land Cover Database 2011 Percent Developed Imperviousness dataset updated in 2014",
"American Community Survey 2014 5-year block group",
"American Community Survey 2014 5-year block group",
" ",
"Site survey",
"Site survey",
"Site survey",
" ",
"Site survey",
"Site survey",
"Interviews and site survey",
"Interviews and site survey"
),
`Population` = c(
" ",
paste0("Range: ", paste0(range(population.covariates.subset$acres)%>%round(2), collapse = "-"),
"; Mean(SD): ", mean(population.covariates.subset$acres)%>%round(2), "(",
sd(population.covariates.subset$acres)%>%round(2), ")"),
paste("Bellevue:", sum(population.covariates.subset$DistrictName=="BELLEVUE", na.rm = T),
"Redmond:", sum(population.covariates.subset$DistrictName=="REDMOND", na.rm=T)),
paste0("Range: ", paste0(range(population.covariates.subset$age.2017, na.rm = T)%>%round(1),
collapse = "-"),
"; Mean(SD): ", mean(population.covariates.subset$age.2017, na.rm = T)%>%round(1), "(",
sd(population.covariates.subset$age.2017, na.rm = T)%>%round(2), ")"),
paste("Below Average:", sum(population.covariates.subset$BldgQuality_lookup %in%
c("LOW COST", "LOW/AVERAGE"), na.rm=T),
"Average:", sum(population.covariates.subset$BldgQuality_lookup=="AVERAGE", na.rm = T),
"Average/Good:", sum(population.covariates.subset$BldgQuality_lookup=="AVERAGE/GOOD", na.rm=T),
"Good:", sum(population.covariates.subset$BldgQuality_lookup=="GOOD", na.rm=T),
"Good/Excellent:", sum(population.covariates.subset$BldgQuality_lookup=="GOOD/EXCELLENT", na.rm=T)
),
paste0("Range: ", paste0(range(population.covariates.subset$landrentperacre)%>%round(0), collapse = "-"),
"; Mean(SD): ", mean(population.covariates.subset$landrentperacre)%>%round(0), "(",
sd(population.covariates.subset$landrentperacre)%>%round(0), ")"),
paste0("Range: ", paste0(range(population.covariates.subset$dissolved_parcel_500m_buffer_impervious_500m_mean)%>%round(1), collapse = "-"),
"; Mean(SD): ", mean(population.covariates.subset$dissolved_parcel_500m_buffer_impervious_500m_mean)%>%round(1), "(",
sd(population.covariates.subset$dissolved_parcel_500m_buffer_impervious_500m_mean)%>%round(1), ")"),
paste0("Range: ", paste0(range(population.covariates.subset$MedianHouseholdIncome_B19013e1)%>%round(0), collapse = "-"),
"; Mean(SD): ", mean(population.covariates.subset$MedianHouseholdIncome_B19013e1)%>%round(0), "(",
sd(population.covariates.subset$MedianHouseholdIncome_B19013e1)%>%round(0), ")"),
paste0("Range: ", paste0(range(population.covariates.subset$Proportion_ForeignBorn_B99051e5*100)%>%round(1), collapse = "-"),
"; Mean(SD): ", mean(population.covariates.subset$Proportion_ForeignBorn_B99051e5*100)%>%round(1), "(",
sd(population.covariates.subset$Proportion_ForeignBorn_B99051e5*100)%>%round(1), ")"),
" ",
"NA",
"NA",
"NA",
" ",
"NA",
"NA",
"NA",
"NA"
),
`Sample` = c(
" ",
paste0("Range: ", paste0(range(sample.covariates$acres)%>%round(2), collapse = "-"),
"; Mean(SD): ", mean(sample.covariates$acres)%>%round(2), "(",
sd(sample.covariates$acres)%>%round(2), ")"),
paste("Bellevue:", sum(sample.covariates$DistrictName=="BELLEVUE", na.rm = T),
"Redmond:", sum(sample.covariates$DistrictName=="REDMOND", na.rm=T)),
paste0("Range: ", paste0(range(sample.covariates$age.2017), collapse = "-"),
"; Mean(SD): ", mean(sample.covariates$age.2017)%>%round(1), "(",
sd(sample.covariates$age.2017)%>%round(1), ")"),
paste("Below Average:", sum(sample.covariates$BldgQuality_lookup %in%
c("LOW COST", "LOW/AVERAGE"), na.rm=T),
"Average:", sum(sample.covariates$BldgQuality_lookup=="AVERAGE", na.rm = T),
"Average/Good:", sum(sample.covariates$BldgQuality_lookup=="AVERAGE/GOOD", na.rm=T),
"Good:", sum(sample.covariates$BldgQuality_lookup=="GOOD", na.rm=T),
"Good/Excellent:", sum(sample.covariates$BldgQuality_lookup=="GOOD/EXCELLENT", na.rm=T)
),
paste0("Range: ", paste0(range(sample.covariates$landrentperacre)%>%round(0), collapse = "-"),
"; Mean(SD): ", mean(sample.covariates$landrentperacre)%>%round(0), "(",
sd(sample.covariates$landrentperacre)%>%round(0), ")"),
paste0("Range: ", paste0(range(sample.covariates$dissolved_parcel_500m_buffer_impervious_500m_mean)%>%round(1), collapse = "-"),
"; Mean(SD): ", mean(sample.covariates$dissolved_parcel_500m_buffer_impervious_500m_mean)%>%round(1), "(",
sd(sample.covariates$dissolved_parcel_500m_buffer_impervious_500m_mean)%>%round(1), ")"),
paste0("Range: ", paste0(range(sample.covariates$MedianHouseholdIncome_B19013e1)%>%round(0), collapse = "-"),
"; Mean(SD): ", mean(sample.covariates$MedianHouseholdIncome_B19013e1)%>%round(0), "(",
sd(sample.covariates$MedianHouseholdIncome_B19013e1)%>%round(0), ")"),
paste0("Range: ", paste0(range(sample.covariates$Proportion_ForeignBorn_B99051e5*100)%>%round(1), collapse = "-"),
"; Mean(SD): ", mean(sample.covariates$Proportion_ForeignBorn_B99051e5*100)%>%round(1), "(",
sd(sample.covariates$Proportion_ForeignBorn_B99051e5*100)%>%round(1), ")"),
" s",
paste("Yes:", sum(management.landscaping$stand.predate.development=="yes", na.rm = T),
"No:", sum(management.landscaping$stand.predate.development=="no", na.rm=T)),
paste0("Range: ", paste0(range(management.landscaping$height.m.median)%>%round(1), collapse = "-"),
"; Mean(SD): ", mean(management.landscaping$height.m.median)%>%round(1), "(",
sd(management.landscaping$height.m.median)%>%round(1), ")"),
paste0("Range: ", paste0(range(management.landscaping$tree.conifer.nat.dens)%>%round(1), collapse = "-"),
"; Mean(SD): ", mean(management.landscaping$tree.conifer.nat.dens)%>%round(1), "(",
sd(management.landscaping$tree.conifer.nat.dens)%>%round(1), ")"),
" s",
paste("Mean (SD) Grass:", mean(dens.matrify.gc$grass*100)%>%round(1),
"(",
sd(dens.matrify.gc$grass*100)%>%round(1), ");",
"Impervious:", mean(dens.matrify.gc$impervious.sqft*100)%>%round(1),
"(",
sd(dens.matrify.gc$impervious.sqft*100)%>%round(1), ");",
"Dirt/Litter:", mean(dens.matrify.gc$dirt.litter*100)%>%round(1),
"(",
sd(dens.matrify.gc$dirt.litter*100)%>%round(1), ")"),
paste0("Range: ", paste0(range(management.landscaping$height.m.median)%>%round(1), collapse = "-"),
"; Mean(SD): ", mean(management.landscaping$height.m.median)%>%round(1), "(",
sd(management.landscaping$height.m.median)%>%round(1), ")"),
paste("Yes:", sum(management.landscaping$Irrigation=="yes", na.rm = T),
"No:", sum(management.landscaping$Irrigation=="no", na.rm=T)),
paste("Mulch Y/N:", paste(sum(management.landscaping$Mulch=="yes", na.rm = T),
sum(management.landscaping$Mulch=="no", na.rm=T),
sep = "/"),
"Herbicide:", paste(sum(management.landscaping$Herbicide=="yes", na.rm = T),
sum(management.landscaping$Herbicide=="no", na.rm=T),
sep = "/"),
"Fertilizer:", paste(sum(management.landscaping$Fertilizer=="yes", na.rm = T),
sum(management.landscaping$Fertilizer=="no", na.rm=T), sep = "/")
)
)
)
knitr::kable(covariate.definitions,
caption = '(ref:definition)',
format = "pandoc", escape = TRUE, format.args = list(decimal.mark = '.', big.mark = ","))
# Chunk 7: beta-calc
tree.sorensen <- vegdist(matrify.tree.sp.only, binary = TRUE)%>%round(3) # take mean for sorensen index
shrub.sorensen <- vegdist(matrify.shrub.site, binary = TRUE)%>%round(3) #ditto
tree.z.beta <- betadiver(matrify.tree.sp.only, "z")%>%round(3)
shrub.z.beta <- betadiver(matrify.shrub.site, "z")%>%round(3)
beta.tibble <- tibble(Metric = c("Tree Sorensen", "Tree Arrhenius Model z", "Shrub Sorensen", "Shrub Arrhenius Model z"),
Minimum = c(min(tree.sorensen), min(tree.z.beta), min(shrub.sorensen), min(shrub.z.beta)),
Maximum = c(max(tree.sorensen), max(tree.z.beta), max(shrub.sorensen), max(shrub.z.beta)),
Mean = c(mean(tree.sorensen)%>%round(3),
mean(tree.z.beta)%>%round(3),
mean(shrub.sorensen)%>%round(3),
mean(shrub.z.beta)%>%round(3)),
`S.D.` = c(sd(tree.sorensen)%>%round(3),
sd(tree.z.beta)%>%round(3),
sd(shrub.sorensen)%>%round(3),
sd(shrub.z.beta)%>%round(3)),
Median = c(median(tree.sorensen), median(tree.z.beta),
median(shrub.sorensen), median(shrub.z.beta)))
diver.metrics <- data.frame(matrix(unlist(pretty.descriptive.stats.site),
nrow = nrow(pretty.descriptive.stats.site),
byrow = FALSE),
stringsAsFactors = FALSE)
colnames(diver.metrics) <- colnames(pretty.descriptive.stats.site)
diver.metrics <- rbind(diver.metrics,beta.tibble)
diver.metrics.display <- c("Tree Abundance",
"Tree Density",
"Tree Species Richness",
"Tree Shannon Diversity",
"Tree Effective Species Richness",
"Tree Sorensen",
"Tree Arrhenius Model z",
"Native Tree Abundance",
"Native Tree Density",
"Native Tree Species Richness",
"Native Tree Shannon Diversity",
"Native Tree Effective Species Richness",
"Native Conifer Abundance",
"Native Conifer Density",
"Shrub Abundance",
"Shrub Density",
"Shrub Species Richness",
"Shrub Shannon Diversity",
"Shrub Effective Species Richness",
"Shrub Sorensen",
"Shrub Arrhenius Model z",
"Native Shrub Abundance",
"Native Shrub Desnity",
"Native Shrub Species Richness",
"Native Shrub Shannon Diversity",
"Native Shrub Effective Species Richness")
knitr::kable(diver.metrics[ diver.metrics$Metric %in% diver.metrics.display , c(1:3,6,4,5)],
row.names = FALSE,
caption = "Metrics for tree and shrub communities on sampled office developments. H' is Shannon's diversity index [@shannon1949], effective species richness = exp(H') [@jost2006], density = individuals per acre.",
format = "pandoc", escape = TRUE,
format.args = list(decimal.mark = '.', big.mark = ","))
head(tree.cluster.native, 10) / 11
count.tree[1,5]
count.tree
shrub.ac.mean <- merge(sample.covariates, vegetation.clusters,
by = "SiteName",
sort = FALSE) %>%
group_by(shrub.cluster.name) %>%
summarise_if(is.numeric, .funs = mean)
tree.ac.mean <- merge(sample.covariates, vegetation.clusters,
by = "SiteName",
sort = FALSE) %>%
group_by(tree.cluster.name) %>%
summarise_if(is.numeric, .funs = mean)
shrub.ml.mean <- merge(vegetation.clusters, management.landscaping,
by.x = "SiteName", by.y= "Site",
sort = FALSE) %>%
mutate(tot.abund = rowSums(matrify.shrub.site)) %>%
group_by(shrub.cluster.name) %>%
summarise_if(is.numeric, .funs = mean)
tree.ml.mean <- mutate(management.landscaping,
tot.abund = rowSums(matrify.tree.sp.only)) %>%
group_by(tree.cluster.name) %>%
summarise_if(is.numeric, .funs = mean)
shrub.gc.mean <- merge(dens.matrify.gc, vegetation.clusters,
by.x = 0, by.y = "SiteName",
sort = FALSE) %>%
group_by(shrub.cluster.name) %>%
summarise_at(.vars = c("dirt.litter",
"grass", "mulch", "impervious.sqft"
), .funs = mean)
tree.gc.mean <- merge(dens.matrify.gc, vegetation.clusters,
by.x = 0, by.y = "SiteName",
sort = FALSE) %>%
group_by(tree.cluster.name) %>%
summarise_at(.vars = c("dirt.litter",
"grass", "mulch", "impervious.sqft"
), .funs = mean)
count.tree
tree.ml.mean
mheight.shrub
count.shrub
rowSums(matrify.shrub.site)
dens.tree <-
adonis2(
rowSums(dens.matrify.tree.sp.only) ~ vegetation.clusters$tree.cluster.name,
permutations = 99999,
method = "eucl"
)
dens.shrub <-
adonis2(
rowSums(dens.matrify.shrub.site) ~ vegetation.clusters$shrub.cluster.name,
permutations = 99999,
method = "eucl"
)
dens.tree
dens.shrub
